name: Failure Response Test

on:
  workflow_run:
    workflows: ["JMeter Performance Test"]
    types:
      - completed

jobs:
  failure-response-test:
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Set JMeter Path
      run: |
        $jmeterPath = "C:\Users\TDA\Downloads\apache-jmeter-5.6.3\bin"
        [Environment]::SetEnvironmentVariable("JMETER_HOME", $jmeterPath, [System.EnvironmentVariableTarget]::Machine)
        [Environment]::SetEnvironmentVariable("PATH", "$env:PATH;$jmeterPath", [System.EnvironmentVariableTarget]::Machine)
        Write-Host "JMeter path is $jmeterPath"

    - name: Create Failure Response Test Plan
      run: |
        New-Item -Path failure_response_reports -ItemType Directory -Force
        @"
        <?xml version="1.0" encoding="UTF-8"?>
        <jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
          <hashTree>
            <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Failure Response Test Plan">
              <boolProp name="TestPlan.functional_mode">true</boolProp>
              <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
              <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
            </TestPlan>
            <hashTree>
              <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
                <stringProp name="ThreadGroup.num_threads">50</stringProp>
                <stringProp name="ThreadGroup.ramp_time">5</stringProp>
                <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
                  <stringProp name="LoopController.loops">5</stringProp>
                </elementProp>
              </ThreadGroup>
              <hashTree>
                <!-- Simulate failure -->
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Simulate Failure">
                  <stringProp name="HTTPSampler.domain">example.com</stringProp>
                  <stringProp name="HTTPSampler.path">/simulate-failure</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check Failure Response">
                    <stringProp name="ResponseAssertion.test_field">Response Code</stringProp>
                    <stringProp name="ResponseAssertion.assertion_type">2</stringProp>
                    <collectionProp name="ResponseAssertion.field_to_check">
                      <stringProp name="404">404</stringProp>
                    </collectionProp>
                  </ResponseAssertion>
                </hashTree>
                <!-- Check continued functionality -->
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check Functionality">
                  <stringProp name="HTTPSampler.domain">example.com</stringProp>
                  <stringProp name="HTTPSampler.path">/check-functionality</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check Functionality Response">
                    <stringProp name="ResponseAssertion.test_field">Response Code</stringProp>
                    <stringProp name="ResponseAssertion.assertion_type">1</stringProp>
                    <collectionProp name="ResponseAssertion.field_to_check">
                      <stringProp name="200">200</stringProp>
                    </collectionProp>
                  </ResponseAssertion>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </jmeterTestPlan>
        "@ | Set-Content -Path failure_response_test_plan.jmx -Force

    
